#!/bin/bash
declare -a Board
size=100;
declare -a Basket
let ActualScore=0;
filename="highscore.txt"
HighScore=$(<highscore.txt)
timer=0
#=============================================
#Initializing the Game Board
#=============================================
function DrawBoard()
{
for ((i=0;i<size;i++))
do
        Board[$i]=$i
done
}
#=============================================
#Printing the Board
#=============================================
function PrintBoard()
{

let breakCounter=0;
for ((i=0;i<size;i++))
do
    if (($breakCounter==9));
    then
            if (($i<=9))
            then
            printf "\t${Board[$i]} \n"
            ((breakCounter=0))
            else
            printf "\t${Board[$i]} \n"
            ((breakCounter=0))
            fi
    else
            if (($i<=9))
            then
            printf "\t${Board[$i]} "
            ((breakCounter++))
            else
            printf "\t${Board[$i]}"
            ((breakCounter++))
            fi
    fi
    done
}

#=============================================
#Printing the Empty Board
#=============================================
function EmptyBoard()
{       echo "Timer: "
        duration=$((SECONDS-start))
        tput cup 0 0
        printf "\n"
        printf "$duration\n"
printf "\t\t\t\t ___  __  ___  ___\n"
printf "\t\t\t\t/    |__|  |  /    |__|\n"
printf "\t\t\t\t\___ |  |  |  \___ |  |\n"
printf "\t\t\t\t\t\tTHE FRUITS\n\n\n"
printf "\tMove Basket with A and D"
printf "\t\t\tScore = $ActualScore \n"
printf "\t\t\t\t\t\t\tHighScore = $HighScore \n"
let breakCounter=0;
for ((i=0;i<size;i++))
do
    if (($breakCounter==9))
    then
            if [ ${Board[$i]} == "A" ] || [ ${Board[$i]} == "B" ] || [ ${Board[$i]} == "C" ] || [ ${Board[$i]} == "W" ] || [ ${Board[$i]} == "M" ] || [ ${Board[$i]} == "L" ] || [ ${Board[$i]} == "X" ]
            then
            printf "\t${Board[$i]}|\n|"
            ((breakCounter=0))
            else
            printf "\t |\n|"
            ((breakCounter=0))
            fi
    
    else
                        if [ ${Board[$i]} == "A" ] || [ ${Board[$i]} == "B" ] || [ ${Board[$i]} == "C" ] || [ ${Board[$i]} == "W" ] || [ ${Board[$i]} == "M" ] || [ ${Board[$i]} == "L" ] || [ ${Board[$i]} == "X" ]
            then
            printf "\t${Board[$i]}"
            ((breakCounter++))
            else
            printf "\t "
            ((breakCounter++))
            fi
    
                 
    fi
    done
}
#=============================================
#Inialize the Basket
let Randomindex=0
#=============================================
function DrawBasket()
{
    for ((i=0;i<10;i++))
    do
            Basket[$i]=$i
    done
   Randomindex=$(($RANDOM % 9))
   Basket[$Randomindex]="\_/"

}
#=============================================
#Display Basket
#=============================================
function PrintBasket()
{
     for ((i=0;i<10;i++))
        do
        if [ ${Basket[$i]} == "\_/" ]
        then
            printf "\t\_/"
        elif [ ${Basket[$i]} == 9 ]
        then
                        if [ ${Basket[$i]} == "\_/" ]
                        then
                        printf "\t\_/\n"
                        
                        else
                        printf "\t \n"
                        fi
        else
         printf "\t  "
        fi

        done
}
#=============================================
#Move Basket
#=============================================
function MoveBasket()
{
    printf "\n"
    read  -t 1 opt
    temp1=$Randomindex;
    if [ "$opt" == "A" ] || [ "$opt" == "a" ]
    then
    Basket[$Randomindex]=$temp1
    ((Randomindex--))
                if [ $Randomindex == -1 ]
                then
                temp1=9
                Basket[9]="\_/"
                opt=0
                Randomindex=9
                elif [ $Randomindex -gt -1 ]
                then
                    temp1=Basket[$Randomindex]
                    Basket[$Randomindex]="\_/"
                    opt=0
                fi
    elif [ "$opt" == "D" ] || [ "$opt" == "d" ]
    then
    Basket[$Randomindex]=$temp1
    ((Randomindex++))
                if [ $Randomindex == 10 ]
                then
                temp1=0
                Basket[0]="\_/"
                opt=0
                Randomindex=0
                elif [ $Randomindex -le 10 ]
                then
                    temp1=Basket[$Randomindex]
                    Basket[$Randomindex]="\_/"
                    opt=0
                fi
    fi
}
#=============================================
#RANDOM FRUIT
#dummy initialization
#=============================================
function Randomfruit()
{
        if((whichfruit==1))
        then
        whichfruit=" A"
        #Apple
        elif((whichfruit==2))
        then
        whichfruit=" M"
        #Mango
        elif((whichfruit==3))
        then
        whichfruit=" L"
        #Lemon
        elif((whichfruit==4))
        then
        whichfruit=" W"
        #watermelon
        elif((whichfruit==5))
        then
        whichfruit=" B"
        #Banana
        elif((whichfruit==6))
        then
        whichfruit=" C"
        #Cherry
        elif((whichfruit==7))
        then
        whichfruit=" X"
        #junk fruit
        fi
}
#=============================================
#Drop the fruit
#=============================================

function DropFruit()
{ clear
    let Fruit1=$(($RANDOM % 9))
    let jump=10
    
    whichfruit=$(($RANDOM % 8))
        
        if((whichfruit==0))
        then
        ((whichfruit++))
        fi
        
        
        while [ $Fruit1 -le $size ]
        do
        let temp=Board[$Fruit1]
            Randomfruit
            Board[$Fruit1]=$whichfruit
         clear
         
         #PrintBoard
         EmptyBoard
         
         PrintBasket
         
         Board[$Fruit1]=$temp;
         ((Fruit1=Fruit1+jump))
         
         CalculateScore
         checkMaximm
         MoveBasket
   
       
        done
}
#=============================================
#Calculate Score Disappear
#=============================================
function CalculateScore()
{
         let forScore=$Randomindex
         ((forScore+=100))
         if [ $forScore == $Fruit1 ]
         then
                if [ "$whichfruit" == " X" ]
                then
                         ((ActualScore=ActualScore-5))
                else
                         ((ActualScore+=5))
                fi
         fi
         
}
#=============================================
#C H E C K - M A X I M U M
#=============================================
function checkMaximm()
{
                if [[ "$ActualScore" -gt "$HighScore" ]]
                then
                printf "\nBoooom!! New High Score :-)\n"
                echo $ActualScore>$filename
                sleep 1
                fi
}
#=============================================
#H I G H _ S C O R E
#=============================================
function HighScorefun()
{
printf "\t\t\t  _____   _____   _______   _____    _     _ \n"
printf "\t\t\t ||      ||   ||    ||     ||       | |   | |\n"
printf "\t\t\t ||      ||___||    ||     ||       | |___| |\n"
printf "\t\t\t ||      ||   ||    ||     ||       | |   | |\n"
printf "\t\t\t  =====  ||   ||    ||      =====   |_|   |_|\n"
printf "\n\t\t\t\t\t\t\t\tT H E _ F R U I T S\n\n\n"
                if [[ "$ActualScore" -gt "$HighScore" ]]
                then
                printf "\t\t\t\tHIGH-SCORE = $ActualScore \n"
                else
                printf "\t\t\t\tHIGH-SCORE = $HighScore \n"
                fi
                #sleep 4
                Thankyou
                clear
                
}
#=============================================
#Boom Welcome
#=============================================
function Boom()
{
printf "\t\t\t  _____   _____   _______   _____    _     _ \n"
printf "\t\t\t ||      ||   ||    ||     ||       | |   | |\n"
printf "\t\t\t ||      ||___||    ||     ||       | |___| |\n"
printf "\t\t\t ||      ||   ||    ||     ||       | |   | |\n"
printf "\t\t\t  =====  ||   ||    ||      =====   |_|   |_|\n"
printf "\n\t\t\t\t\t\t\t\tT H E _ F R U I T S\n\n\n"
sleep 0.5
printf "\t\t\t\t\t"Loading
while [ $SECONDS -le 3 ]
do
printf "."
sleep 0.3
done
printf "\n"

}
#=============================================
#PLAY GUIDLINES
#=============================================
function PlayGuide()
{
clear
printf "\t\tP L A Y _ G U I D E L I N E S\n\n\n"
printf "\t\tFRUIT NAMES.\n"
printf "\t\t1) A = APPLE\n"
printf "\t\t2) M = MANGO\n"
printf "\t\t3) L = LEMON\n"
printf "\t\t4) W = WATERMELON\n"
printf "\t\t5) B = BANANA\n"
printf "\t\t6) C = CHERRY\n"
printf "\t\t7) X = JUNK FRUIT\n\n\n"
printf "\t\tINSTRUCTIONS\n"
printf "\t\tPRESS 'A' OR 'a' TO MOVE BASKET LEFT BY 1 INDEX.\n"
printf "\t\tPRESS 'D' OR 'd' TO MOVE BASKET RIGHT BY 1 INDEX.\n"
printf "\t\tCATCHING A FRUIT ADDS UP 5 POINTS IN TOTAL SCORE.\n\n"
printf "\t\tWATCH OUT FOR THE JUNK FRUIT 'X'. IT WILL DEDUCT THE SCORE BY 5 POINTS.\n"
printf "\t\tENJOY THE GAME!!!\n\n"
}
#=============================================
#CREDITS
#=============================================
function Credits()
{
clear
printf "\t\t\t  _____   _____   _______   _____    _     _ \n"
printf "\t\t\t ||      ||   ||    ||     ||       | |   | |\n"
printf "\t\t\t ||      ||___||    ||     ||       | |___| |\n"
printf "\t\t\t ||      ||   ||    ||     ||       | |   | |\n"
printf "\t\t\t  =====  ||   ||    ||      =====   |_|   |_|\n"
printf "\n\t\t\t\t\t\t\t\tT H E _ F R U I T S\n\n"
printf "\t\tT E A M _ M E M B E R S\n\n\n"
printf "\t\t1) MUHAMMAD ZAIN AHSAN.\t19f0228\n"
printf "\t\t2) DANISH AHMAD.\t19f0170\n"
printf "\t\t3) USAMA NOSHER.\t19f0269\n"
}
#=============================================
#THANKYOU
#=============================================
function Thankyou()
{
printf "\t\tTHANK YOU FOR PLAYING THIS FUN GAME.<3\n"
sleep 1
}
#=============================================
#MAIN MENU
#=============================================
function MainMenu()
{
Boom
clear
let Mchoice=0
while [ $Mchoice -ne 4 ]
do
printf "\t\t\t  _____   _____   _______   _____    _     _ \n"
printf "\t\t\t ||      ||   ||    ||     ||       | |   | |\n"
printf "\t\t\t ||      ||___||    ||     ||       | |___| |\n"
printf "\t\t\t ||      ||   ||    ||     ||       | |   | |\n"
printf "\t\t\t  =====  ||   ||    ||      =====   |_|   |_|\n"
printf "\n\t\t\t\t\t\t\t\tT H E _ F R U I T S\n\n"
printf "\t\t\t\tM A I N _ M E N U\n"
printf "\t\t\t\t1:Play the game\n"
printf "\t\t\t\t2:How to play Guide\n"
printf "\t\t\t\t3:Credits\n"
printf "\t\t\t\t4:Exit\n"
read -p "                           Input " Mchoice

        if((Mchoice==1))
        then
        start=$((SECONDS))
        DrawBoard
        DrawBasket
        while [ $SECONDS -le 61 ]
        do
        DropFruit
        done
        #clear
        HighScorefun
        elif((Mchoice==2))
        then
        PlayGuide
        sleep 5
        clear
        elif((Mchoice==3))
        then
        Credits
        sleep 3
        clear
        else
        Thankyou
        sleep 1
        clear
        fi

done
}
#=============================================
#int main
#=============================================
MainMenu
